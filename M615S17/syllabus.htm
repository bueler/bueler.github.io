<!DOCTYPE html>

<html lang="en-US">

<head>
  <meta charset="utf-8">
  <meta name="author" content="Ed Bueler">
  <title>Syllabus for Math 615 Numerical Analysis of Differential Equations Spring 2017 (Ed Bueler)</title>
  <link href="../style.css" rel="stylesheet" type="text/css"/>
</head> 
  
<body>
<center>
<h1><a href="index.html">Math 615 Numerical Analysis of Differential Equations</a></h1>

<h1>DRAFT</h1>

<h2>Spring 2017, UAF</h2>
</center>

<table cols="2" width="100%">
  <tbody>
    <tr>
      <td valign="bottom" width="30%">
      <b>Instructor</b>: <b><a href="../index.html">Ed Bueler</a></b><br>
      <b>Office</b>: Chapman 301C.<br>
      <a href="../OffHrs.htm">bueler.github.io/OffHrs.htm</a><br>
      <b>Phone</b>: 474-7693<br>
      <b>eMail:</b> <a href="mailto:elbueler@alaska.edu">elbueler@alaska.edu</a><span style="text-decoration: underline;"></span>
      </td>
      <td valign="bottom" width="50%">
      <b>Website</b>: <a href="index.html">bueler.github.io/M15S17</a><br>
      <b>Times & Room:</b> MWF 9:15 -- 10:15 am Gruening 401<br>
      <b>CRN:</b> 36278<br>
      <b>Text:</b> R. J. LeVeque, <em>Finite Difference Methods for Ordinary and Partial Differential Equations</em>, SIAM Press 2007
      </td>
    </tr>
  </tbody>
</table>

<h2 style="text-align:left;"> Course Content and Topics: </h2>

We cover methods for numerical approximations to partial differential equations (PDEs) and ordinary differential equations (ODEs) and related problems on computers.  PDEs are the underlying structure for fluid flow, electric/magnetic fields, thermodynamics, deformation, quantum mechanics and chemistry, and so on.  They also appear in finance and population dynamics.  As a rule, ODEs are even more universal, often as a part of a PDE problem.<br><br>

The emphasis will be on finite difference methods for PDEs and the understanding of many ODE schemes.  We do mathematical analysis of numerical methods for these equations, with both practical and abstract approaches to this numerical analysis: How are these methods implemented, verified, and used? When are they stable? Do we know in advance that they converge?<br><br>

Lectures will include <em>Matlab</em> demonstrations, and help getting started with it, whenever I can.  However, <em>you</em> must show initiative in learning actual numerical computation if you have not done it before.<br><br>

Homework assignments and a student-chosen project, tentatively in the form of a short slide-show, will include actual implementations in <em>Matlab</em> or another suitable language of your choice; I will support <em>Matlab</em> but I'll be flexible on what you use for assignments and the project.<br><br>

Abstract and precise thought, that is, actual mathematics, is also essential when making choices among numerical methods for solving major problems.  Thus all homework assignments will have mathematical exercises.  In these you will be asked to "show" and "prove", and, while ormal proof style is not important, you will need to give clear and sufficiently-general logical arguments.<br><br>

We will not be satisfied with seeing lots of numbers or pretty pictures coming from a computer.  Instead we will be concerned with the degree to which our numbers correctly approximate the PDE problem.  Thus we will seek the underlying linear algebra structure of these problems and we will usually think in terms of vectors and matrices.  The course will include some nonlinear examples, for which one uses a sequence of approximating linear problems.<br>

<h2 style="text-align:left;">Goals and Outcomes:</h2>

At the end this course you will not be a professional numerical analyst.  You will be able to evaluate and use many numerical tools for solving scientific and engineering problems.  You will be able to code some of the basic methods (i.e. for prototyping more serious solutions), and you will have the mathematical start needed to take the next steps to learn other approaches like the finite element method and spectral methods.<br><br>
    
You will be comfortable using Matlab/Octave both as a "supercalculator" and as a programming language.  Increased student competence with actual scientific computing is a goal of the course.<br>

<h2 style="text-align:left;">Assigned Work:</h2>

Weekly homework forms 50% of your score for the class.  The homework consists of by-hand computations, construction/comprehension of numerical algorithms, implementation of numerical algorithms in Matlab/Octave, basic computer visualization of functions and constraints, rigorously-justified examples and counter-examples, and some proofs.<br><br>

Homework assignments, and their due dates, will be regularly posted at the Course Website <a href="index.html">bueler.github.io/M615S17/</a>.  The site also has a daily schedule of topics which will be updated on an ongoing basis to reflect what topics were actually covered each day.

<h2 style="text-align:left;">How Your Grade is Determined:</h2>

There will be <span style="font-weight: bold;">one in-class Midterm Exam</span>, covering basic concepts and definitions, and a <span style="font-weight: bold;">take-home Final Exam</span>.  There will be a <span style="font-weight: bold;">project in two parts</span>, with the first part due midsemester and the second due before final exams:<br><br>

<table cols="4" width="100%">
  <tbody>
    <tr>
      <td valign="top" width="25%"><b>Work</b><br>
Homework<br>
Project part I<br>
Project part II<br>
Midterm Exam<br>
Final Exam<br>
      </td>
      <td valign="top" width="20%"><b>Percent of Grade </b><br>
50% <br>
5% <br>
10% <br>
15% <br>
20% <br>
      </td>
      <td valign="top" width="40%"><b>Dates </b><br>
weekly<br>
<span style="font-style: italic;">due</span> FIXME Friday 4 November, noon<br>
<span style="font-style: italic;">due</span> Tuesday 13 December, 5pm<br>
<span style="text-decoration: underline; font-style: italic;">in class</span>, Monday 24 October<br>
<span style="font-style: italic;">due</span> Thursday 15 December, 5pm<br>
      </td>
    </tr>
  </tbody>
</table>

<br>
Based on your raw (homework, project, and exams) total, I guarantee grades according to the following schedule:<br><br>

&nbsp;&nbsp;  90 - 100 % = <b>A</b>, &nbsp;79 - 89 % = <b>B</b>, &nbsp;68 - 78 % = <b>C</b>, &nbsp;57 - 67 % = <b>D</b>, &nbsp;0 - 56 % = <b>F</b>.<br><br>

This schedule is a guarantee.  I reserve the right to increase your grade <i>above</i> this schedule based on the actual difficulty of the work and/or upon average class performance.<br>


<h2 style="text-align:left;">Policies:</h2>

The Dept of Mathematics and Statistics has reasonable policies on incompletes, late withdrawals, early final examinations, etc.; see <a href="http://www.uaf.edu/dms/policies/">www.uaf.edu/dms/policies</a>. &nbsp;  You are covered by the UAF Student Code of Conduct. &nbsp;  I will work with the Office of Disabilities Services (208 WHIT, 474-5655) to provide reasonable accommodation to student with disabilities.<br>


<h2 style="text-align:left;"> Prerequisites:</h2>

Officially: <em>Prerequisites: CS F201 (Computer Science I); MATH F310 (Numerical Analysis); MATH F314 (Linear Algebra); MATH F421 (Applied Analysis); MATH F422 (Intro to Complex Analysis); or permission of instructor.
</em><br><br>

In other words, this is an applied and computational mathematics course at the introductory graduate level.  As a practical matter, students course come from math, computer science, physics, geophysics, engineering, and indeed all over the technical subjects at UAF, and I am aware of this fact!  I will devote substantial class time, especially at the beginning of the semester, to collecting together the many bits of needed prequisite knowledge.  In these aspects, this course is similar to MATH 614 Numerical Linear Algebra and MATH 661 Optimization.<br><br>


<br>

</body>
</html>

