<!DOCTYPE html>

<html lang="en-US">

<head>
  <meta charset="utf-8">
  <meta name="author" content="Ed Bueler">
  <title>Syllabus for Math 661 Optimization Fall 2018 (Bueler)</title>
  <link href="../style.css" rel="stylesheet" type="text/css"/>
</head> 
  
<body>
<center>
<h1><a href="index.html">Math 661 Optimization</a></h1>

<h2>Fall 2018, UAF</h2>
</center>

<table cols="2" width="100%">
  <tbody>
    <tr>
      <td valign="top" width="60%">
      <b>Instructor</b>: <br>
      &nbsp;&nbsp; <a href="../index.html">Ed Bueler</a><br>
      &nbsp;&nbsp; Chapman 306C <br>
      &nbsp;&nbsp; office hours: &nbsp; <a href="../OffHrs.htm">bueler.github.io/OffHrs.htm</a><br>
      &nbsp;&nbsp; <a href="mailto:elbueler@alaska.edu">elbueler@alaska.edu</a><span style="text-decoration: underline;"></span>
      </td>
      <td valign="top" width="40%">
      <b>Class</b>: <br>
      &nbsp;&nbsp; MWF 11:45am -- 12:45pm<br>
      &nbsp;&nbsp; Bunnell 410<br>
      &nbsp;&nbsp; CRN: 75807<br>
      </td>
    </tr>
  </tbody>
</table>


<br><br>

Optimization is an essential mathematical technology for science, engineering, and finance.  This course is a graduate-level introduction to this part of applied mathematics.  While we usually focus on ideas, algorithms, and applications, also mathematical rigor (i.e. proof) is used when appropriate.

<h3 style="text-align:left;"> Course Website: </h3>

<a href="index.html">bueler.github.io/M661F18/index.html</a>

<h3 style="text-align:left;"> Topics: </h3>

<ul>
<li> Continuous optimization, both nonlinear and linear.</li>
<li> Simplex method for linear programming.   ("Linear programming" refers to optimization of a linear function subject to linear constraints.)</li>
<li> Iterative methods for unconstrained problems, including Newton and quasi-Newton methods.</li>
<li> Line search and trust region methods.</li>
<li> Constrained problems and Karush-Kuhn-Tucker conditions.</li>
<li> Linear algebra related to the above topics.</li>
<li> Convergence theorems for some methods.</li>
<li> Practical work with the computer.  Examples from applications.</li>
</ul>

<h3 style="text-align:left;"> Goals and Outcomes: </h3>

The goal of this applied mathematics course is to be able to understand optimization problems as they arise in applied contexts, select algorithms, and apply optimization software based on understanding of theory and standard examples.  Understanding of concepts should suffice for the student to assess claims about optimization software performance.  Increased student competence with general scientific computing is also a goal.

<h3 style="text-align:left;"> Textbook: </h3>

Griva, Nash, and Sofer, <em>Linear and Nonlinear Optimization</em>, 2nd ed., SIAM Press 2009

<h3 style="text-align:left;">Assigned Work:</h3>

Weekly homework forms 40% of your score for the course.  The remainder is split among two exams and a project.<br><br>

The homework consists of by-hand computations, design and analysis of numerical algorithms, computer implementation of those algorithms, by-hand and computer visualization of functions and sets, rigorously-justified examples and counter-examples, and some proofs.<br><br>

Examples in lecture and exercises on the homework will use Matlab, both as a supercalculator and as a programming language.  Help will be given to learn Matlab.<br><br>

While Matlab is well-suited to implementing optimization algorithms, other languages are accepted for all student work.  However, only Matlab is fully instructor-supported.  For example, codes on homework solutions will only be in Matlab.  See the separate document <a href="../compareMOP.pdf"><em>Comparison of Programming Languages
for the Numerical Analysis Classroom</em></a>.<br><br>

Homework assignments and their due dates will regularly be posted at the Course Website (<a href="index.html">bueler.github.io/M661F18/</a>).  The site also has a daily schedule of topics.  The schedule will be updated on an ongoing basis to reflect which topics were actually covered each day.  The site will also have links to a growing list of short Matlab codes; this is a good resource for coding examples.<br><br>

The project is in two parts, with the first part due midsemester and the second due before final exams (dates below).  The topic will mostly be up to you but I will make suggestions and yield veto power.  The project must include both some theory and some practical computation (e.g. Matlab programming).<br><br>

There will be one in-class Midterm Exam covering mostly basic concepts and definitions.  The take-home Final Exam will have more substantial problems from the whole semester.

<h3 style="text-align:left;">How Your Grade is Determined:</h3>

<table cols="4" width="100%">
  <tbody>
    <tr>
      <td valign="top" width="25%"><b>Work</b><br>
Homework<br>
Project part I<br>
Project part II<br>
Midterm Exam<br>
Final Exam<br>
      </td>
      <td valign="top" width="20%"><b>Percent of Grade </b><br>
40% <br>
5% <br>
10% <br>
20% <br>
25% <br>
      </td>
      <td valign="top" width="40%"><b>Dates </b><br>
weekly<br>
<span style="font-style: italic;">due</span> Monday 5 November, in class<br>
<span style="font-style: italic;">due</span> Tuesday 11 December, 5pm<br>
<span style="text-decoration: underline; font-style: italic;">in class</span>, Friday 26 October<br>
<span style="font-style: italic;">due</span> Thursday 13 December, 5pm<br>
      </td>
    </tr>
  </tbody>
</table>

<br>
Based on your raw score total, I will assign grades according to the following schedule:<br><br>

&nbsp;&nbsp;  90 - 100 % = <b>A</b>, &nbsp;79 - 89 % = <b>B</b>, &nbsp;68 - 78 % = <b>C</b>, &nbsp;57 - 67 % = <b>D</b>, &nbsp;0 - 56 % = <b>F</b>.<br><br>

This schedule is a guarantee.  I reserve the right to increase your grade <i>above</i> these ranges based on the actual difficulty of the work and/or upon average class performance.<br>


<h3 style="text-align:left;"> Policies: </h3>

The Dept of Mathematics and Statistics has reasonable policies on incompletes, late withdrawals, early final examinations, etc.; see <a href="http://www.uaf.edu/dms/policies/">www.uaf.edu/dms/policies</a>. &nbsp;  You are covered by the UAF Student Code of Conduct. &nbsp;  I will work with the Office of Disabilities Services (208 WHIT, 474-5655) to provide reasonable accommodation to students with disabilities.<br>


<h3 style="text-align:left;"> Prerequisites:</h3>

Officially: <em>Knowledge of calculus, linear algebra and computer programming.</em><br><br>

In terms of UAF courses this translates roughly to: MATH 253 Calculus III, MATH 314 Linear Algebra, and either MATH 310 Numerical Analysis or CS 201 Computer Science I.<br><br>

As a pragmatic matter, students for this course come from math, computer science, statistics, physics, geophysics, engineering, and indeed all the technical subjects at UAF.  The students have undergraduate transcripts from universities all over the world.  I am aware of these realities!  I will devote substantial class time to the task of collecting together the many bits of prequisite knowledge needed to do this applied/computational mathematics at this level.<br><br>

As a graduate applied mathematics course with a diverse technical audience, this course is similar to MATH 614 Numerical Linear Algebra and MATH 615 Numerical Analysis of Differential Equations, and it has similar prerequisites.

</body>
</html>

